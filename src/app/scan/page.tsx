// This is an autogenerated file from Firebase Studio.
"use client";

import { useState, useCallback } from "react";
import { ArrowLeft, Loader2, Info, Sparkles, AlertTriangle, ShieldCheck, Leaf, Search } from "lucide-react";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import CameraScanner from "@/components/camera-scanner";
import type { ProductAnalysisOutput } from "@/ai/flows/product-analysis";
import { productAnalysis } from "@/ai/flows/product-analysis";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import Header from "@/components/header";

export default function ScanPage() {
  const [analysis, setAnalysis] = useState<ProductAnalysisOutput | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleScan = useCallback(async (imageDataUri: string) => {
    if (isLoading) return;
    setIsLoading(true);
    setError(null);
    setAnalysis(null);
    try {
      const result = await productAnalysis({ imageDataUri });
      setAnalysis(result);
    } catch (err) {
      console.error("Analysis failed:", err);
      setError("Could not analyze the product. Please try again.");
    } finally {
      setIsLoading(false);
    }
  }, [isLoading]);

  return (
    <div className="flex min-h-screen w-full flex-col bg-background">
      <Header cartCount={0} />
      <main className="container mx-auto flex-1 px-4 py-8">
        <div className="mx-auto max-w-2xl">
          <Link href="/" className="mb-6 inline-flex items-center gap-2 text-primary hover:underline">
            <ArrowLeft className="h-4 w-4" />
            Back to Shop
          </Link>

          <h1 className="mb-2 text-3xl font-bold tracking-tight sm:text-4xl">Scan a Product</h1>
          <p className="mb-8 text-lg text-muted-foreground">
            Get instant insights about products by scanning them with your camera.
          </p>

          <CameraScanner onScan={handleScan} disabled={isLoading} />

          {isLoading && (
            <div className="mt-8 flex w-full flex-col items-center justify-center gap-4 rounded-lg border border-dashed p-12 text-center">
              <Loader2 className="h-10 w-10 animate-spin text-primary" />
              <p className="text-lg font-semibold">Analyzing Product...</p>
              <p className="text-muted-foreground">Our AI is examining the product, please wait a moment.</p>
            </div>
          )}
          
          {error && (
            <div className="mt-8 flex w-full flex-col items-center justify-center gap-4 rounded-lg border border-destructive/50 bg-destructive/10 p-8 text-center">
              <AlertTriangle className="h-10 w-10 text-destructive" />
              <p className="text-lg font-semibold text-destructive">{error}</p>
            </div>
          )}

          {analysis && (
            <Card className="mt-8 animate-fade-in">
              <CardHeader>
                <CardTitle className="flex items-center gap-3 text-2xl">
                  <Sparkles className="h-7 w-7 text-primary" />
                  <span>AI Product Analysis</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                    <h3 className="text-xl font-semibold">{analysis.productName}</h3>
                    <p className="text-muted-foreground">{analysis.description}</p>
                </div>
                
                <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
                    <Card className="bg-secondary/30">
                        <CardHeader className="pb-2">
                           <CardTitle className="text-lg flex items-center gap-2"><Leaf className="h-5 w-5 text-green-500" />Eco Score</CardTitle>
                        </CardHeader>
                        <CardContent>
                            <div className="flex items-center gap-2 mb-1">
                                <Progress value={analysis.ecoFriendly.score} className="w-full h-3" />
                                <span className="font-bold text-lg">{analysis.ecoFriendly.score}/100</span>
                            </div>
                            <p className="text-sm text-muted-foreground">{analysis.ecoFriendly.reason}</p>
                        </CardContent>
                    </Card>
                    <Card className="bg-secondary/30">
                         <CardHeader className="pb-2">
                           <CardTitle className="text-lg flex items-center gap-2"><ShieldCheck className="h-5 w-5 text-blue-500" />Health & Safety</CardTitle>
                        </CardHeader>
                        <CardContent>
                            <p className="text-sm text-muted-foreground">{analysis.healthAndSafety.summary}</p>
                            {analysis.healthAndSafety.hasHarmfulIngredients && <Badge variant="destructive" className="mt-2">Contains Harmful Ingredients</Badge>}
                        </CardContent>
                    </Card>
                </div>

                 <div>
                    <h4 className="font-semibold text-md mb-2 flex items-center gap-2"><Info className="h-5 w-5 text-amber-500"/>Additional Info</h4>
                    <ul className="list-disc list-inside space-y-1 text-muted-foreground text-sm">
                        <li>Carbon Impact: <span className="font-medium text-foreground">{analysis.carbonImpact}</span></li>
                        <li>Estimated Expiry: <span className="font-medium text-foreground">{analysis.expiryDate}</span></li>
                        <li>Today's Discount: <span className="font-medium text-primary">{analysis.discount}</span></li>
                    </ul>
                </div>
                 
                {analysis.alternative && (
                    <div>
                        <h4 className="font-semibold text-md mb-2 flex items-center gap-2"><Search className="h-5 w-5 text-purple-500" />Better Alternative Suggested</h4>
                         <Card className="bg-primary/10 border-primary/40">
                            <CardHeader className="pb-2">
                                <CardTitle className="text-lg">{analysis.alternative.name}</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <p className="text-sm text-muted-foreground">{analysis.alternative.reason}</p>
                            </CardContent>
                         </Card>
                    </div>
                )}
                
              </CardContent>
            </Card>
          )}
        </div>
      </main>
    </div>
  );
}


// This is an autogenerated file from Firebase Studio.
"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import Image from "next/image";
import Link from "next/link";
import { getAuth, onAuthStateChanged, User, signOut } from "firebase/auth";
import { firebaseApp } from "@/lib/firebase";
import { Loader2, LogOut, ShoppingBag, Heart, Package, History } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { products as allProducts } from "@/data/products";
import type { Product } from "@/lib/types";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Separator } from "@/components/ui/separator";

export default function UserDashboard() {
  const auth = getAuth(firebaseApp);
  const router = useRouter();
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const [wishlist, setWishlist] = useState<Product[]>([]);
  const [cartItemCount, setCartItemCount] = useState(0);

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        if (user.email === 'admin@example.com') {
          router.push('/admin/dashboard');
        } else {
          setUser(user);
          setLoading(false);
        }
      } else {
        router.push("/login");
      }
    });

    const storedWishlistIds = localStorage.getItem("wishlist");
    if (storedWishlistIds) {
      try {
        const ids = new Set(JSON.parse(storedWishlistIds));
        const wishlistProducts = allProducts.filter(p => ids.has(p.id));
        setWishlist(wishlistProducts);
      } catch (e) {
        console.error("Failed to parse wishlist from localStorage", e);
        localStorage.removeItem("wishlist");
      }
    }
    
    // In a real app, cart items would be fetched from a DB. Here we simulate it.
    // For this example, we'll just show a static number. A real implementation would be more complex.
    setCartItemCount(5); 

    return () => unsubscribe();
  }, [auth, router]);

  const handleSignOut = async () => {
    try {
      await signOut(auth);
      router.push("/login");
    } catch (error) {
      console.error("Error signing out: ", error);
    }
  };

  if (loading) {
    return (
      <div className="flex min-h-screen items-center justify-center bg-background">
        <Loader2 className="h-12 w-12 animate-spin text-primary" />
      </div>
    );
  }

  return (
    <div className="flex min-h-screen w-full flex-col bg-muted/40">
      <header className="sticky top-0 z-30 flex h-16 items-center justify-between gap-4 border-b bg-background px-6">
          <Link href="/" className="flex items-center gap-2">
            <ShoppingBag className="h-7 w-7 text-primary" />
            <h1 className="text-xl font-semibold">My Dashboard</h1>
          </Link>
          <div className="flex items-center gap-4">
            <div className="flex items-center gap-2">
                <Avatar className="h-9 w-9">
                    <AvatarImage src={`https://avatar.vercel.sh/${user?.email}.png`} alt="Avatar" />
                    <AvatarFallback>{user?.email?.charAt(0).toUpperCase()}</AvatarFallback>
                </Avatar>
                <span className="font-medium hidden sm:inline">{user?.displayName || user?.email}</span>
            </div>
            <Button variant="outline" size="icon" onClick={handleSignOut}>
              <LogOut className="h-5 w-5" />
              <span className="sr-only">Sign Out</span>
            </Button>
          </div>
      </header>
      <main className="flex-1 p-4 sm:p-6 md:p-8">
        <div className="mb-8">
            <h2 className="text-3xl font-bold tracking-tight">Welcome back, {user?.displayName || user?.email?.split('@')[0]}!</h2>
            <p className="text-muted-foreground">Here's a quick overview of your account.</p>
        </div>
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3 mb-8">
            <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium">Items in Cart</CardTitle>
                <ShoppingBag className="h-4 w-4 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                <div className="text-2xl font-bold">{cartItemCount}</div>
                <p className="text-xs text-muted-foreground">
                    <Link href="/" className="underline hover:text-primary">View Cart & Continue Shopping</Link>
                </p>
                </CardContent>
            </Card>
            <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium">Wishlist Items</CardTitle>
                <Heart className="h-4 w-4 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                <div className="text-2xl font-bold">{wishlist.length}</div>
                <p className="text-xs text-muted-foreground">Your saved items for later</p>
                </CardContent>
            </Card>
            <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium">Total Orders</CardTitle>
                <History className="h-4 w-4 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                <div className="text-2xl font-bold">3</div>
                <p className="text-xs text-muted-foreground">Completed in the last year</p>
                </CardContent>
            </Card>
        </div>
        
        <div className="grid gap-8 lg:grid-cols-2">
             <Card>
                <CardHeader>
                    <CardTitle>My Wishlist</CardTitle>
                    <CardDescription>Items you've saved. Click to view product.</CardDescription>
                </CardHeader>
                <CardContent>
                    {wishlist.length > 0 ? (
                        <div className="space-y-4">
                        {wishlist.map(item => (
                            <Link href="/" key={item.id} className="flex items-center gap-4 p-2 rounded-lg hover:bg-muted -m-2">
                                <Image src={item.image} alt={item.name} width={64} height={64} className="rounded-md aspect-square object-cover" data-ai-hint={item.data_ai_hint} />
                                <div className="flex-1">
                                    <p className="font-semibold">{item.name}</p>
                                    <p className="text-primary font-bold">${item.price.toFixed(2)}</p>
                                </div>
                                <Button variant="secondary" size="sm">View</Button>
                            </Link>
                        ))}
                        </div>
                    ) : (
                        <div className="text-center text-muted-foreground py-12">
                            <Heart className="mx-auto h-12 w-12 mb-4" />
                            <p className="font-semibold">Your wishlist is empty.</p>
                            <p className="text-sm">Start browsing and add items you love!</p>
                        </div>
                    )}
                </CardContent>
            </Card>
             <Card>
                <CardHeader>
                    <CardTitle>Order History</CardTitle>
                    <CardDescription>A list of your past purchases.</CardDescription>
                </CardHeader>
                <CardContent>
                     <div className="text-center text-muted-foreground py-12">
                        <History className="mx-auto h-12 w-12 mb-4" />
                        <p className="font-semibold">No orders yet.</p>
                        <p className="text-sm">Your past orders will appear here.</p>
                    </div>
                </CardContent>
            </Card>
        </div>
      </main>
    </div>
  );
}
